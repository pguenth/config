set confirm_on_delete always
set vcs_aware true
set preview_images true
set preview_images_method ueberzug
set draw_borders separators
set dirname_in_tabs true
set update_title true
set tilde_in_titlebar true
set max_history_size 100
set max_console_history_size 100
set line_numbers relative
set relative_current_zero false
set save_tabs_on_exit true


# make sshfs quicker
setlocal path=/mnt/ssh sort basename 
setlocal path=/mnt/ssh display_size_in_main_column false
setlocal path=/mnt/ssh display_size_in_status_bar false
setlocal path=/mnt/ssh display_free_space_in_status_bar true 
setlocal path=/mnt/ssh preview_max_size 50000 
#setlocal path=/mnt/ssh vcs_aware false 
setlocal path=/mnt/ssh automatically_count_files false
#setlocal path=/mnt/ssh freeze_files true
setlocal path=/mnt/ssh autoupdate_cumulative_size false
setlocal path=/mnt/ssh preview_directories false

# make loading quicker by a keybind (for nonstatic sshfs mounts)
map P chain set display_size_in_main_column! ; set display_size_in_status_bar! ; set display_free_space_in_status_bar! ; set vcs_aware! ; set automatically_count_files! ; set autoupdate_cumulative_size! ; set preview_files! ; set preview_directories!

map L  chain draw_possible_programs; console open_with%space
# Change the line mode
map Bf linemode filename
map Bi linemode fileinfo
map Bm linemode mtime
map Bh linemode humanreadablemtime
map Bp linemode permissions
map Bs linemode sizemtime
map BH linemode sizehumanreadablemtime
map Bt linemode metatitle

# Tagging / Marking
map x       tag_toggle
map UT      tag_remove
map Ut      tag_remove
map Uv      mark_files all=True val=False
map UV      toggle_visual_mode reverse=True
map Ud      uncut
map Uy      uncut
map Um<any> unset_bookmark %any
map "<any>  tag_toggle tag=%any
map <Space> mark_files toggle=True
map <C-V>   mark_files all=True toggle=True
map v       toggle_visual_mode
map V       toggle_visual_mode reverse=True

map Uq      tab_restore

map <RIGHT>    eval fm.execute_console('avfs_open') if fm.thisfile.extension in ['zip', 'tar'] else fm.move(right=1)
map l    eval fm.execute_console('avfs_open') if fm.thisfile.extension in ['zip', 'tar'] else fm.move(right=1)
map <C-J> move down=2 pages=True
map <C-K> move up=2 pages=True
map i     history_go -1
map u     history_go 1

map Y     display_file

map gg console cd%space
map gm cd /mnt
map gM cd /media

map du shell -p du --max-depth=1 -h --apparent-size
map dU shell -p du --max-depth=1 -h --apparent-size | sort -rh

map <C-a>  console rename%space
map a  rename_append
map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
#map <C-a> eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)
map A  eval fm.open_console('rename ' + ('' if fm.thisfile.extension is None else '.' + fm.thisfile.extension.replace("%", "%%")), position=7)
#map <C-s> eval fm.open_console('rename ' + '.test', position=7)
map M  console mkdir%space
map T  console touch%space

map Ot search_next order=tag
map Os search_next order=size
map Oi search_next order=mimetype
map Oc search_next order=ctime
map Om search_next order=mtime
map Oa search_next order=atime

map t         tab_new

copymap <C-h> H
copymap <C-h> b

copymap . D

copymap m<bg>  um<bg> `<bg> '<bg>

# Archiving
map X extract
map C console compress%space

# Locate/Find
map <C-f> console plocate%space
#map F console find%space
#map f console travel%space
map F console scout -atsfkpl%space
map f console scout -atsfkp%space
map r plocate
map e plocate /
map c console filter%space
